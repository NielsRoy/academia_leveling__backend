# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: Role!
  isActive: Boolean!
}

enum Role {
  TEACHER
  STUDENT
}

type Teacher {
  id: Int!
  cellphone: Int!
  user: User!
  classrooms: [Classroom!]!
}

type ExOption {
  id: Int!
  text: String!
  is_correct: Boolean!
  index: Int!
  exercise: Exercise!
}

type StudentDoExercise {
  id: Int!
  started_at: DateTime
  finished_at: DateTime
  errors: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Exercise {
  id: Int!
  severity: String!
  question: String!
  type: Int!
  coins: Int!
  lesson: Lesson!
  options: [ExOption!]!
}

type Lesson {
  id: Int!
  title: String!
  content: String
  img_link: String
  topic: Topic!
  exercises: [Exercise!]!
}

type Topic {
  id: Int!
  name: String!
  description: String
  xpReward: Int!
  subject: Subject!
  lessons: [Lesson!]!
}

type Subject {
  id: Int!
  code: String!
  name: String!
  description: String
  course: Course!
  topics: [Topic!]!
}

type Course {
  id: Int!
  title: String!
  description: String
  subjects: [Subject!]!
}

type Classroom {
  id: Int!
  code: String!
  name: String!
  description: String
  createdAt: DateTime!
  teacher: Teacher!
  course: Course!
  students: [Student!]!
}

type Achievement {
  id: Int!
  name: String!
  description: String
}

type StudentAchiev {
  id: Int!
  student: Student!
  achievement: Achievement!
  earnedAt: DateTime!
}

type Student {
  id: Int!
  level: Int!
  xp: Int!
  user: User!
  classroom: Classroom
  achievements: [StudentAchiev!]!
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  revalidateToken: AuthResponse!
  student: Student!
  getAdaptativeExercises: [Exercise!]!
  achievements: [Achievement!]!
  teacher: Teacher!
  classroom(id: Int!): Classroom!
  courses: [Course!]!
  course(id: Int!): Course!
  subjects: [Subject!]!
  subject(
    """Find a subject by its id or code"""
    searchParam: String!
  ): Subject!
  exercises: [Exercise!]!
  exercise(id: Int!): Exercise!
  lessons: [Lesson!]!
  lesson(id: Int!): Lesson!
  topics: [Topic!]!
  topic(id: Int!): Topic!
  generateStudentsPerformanceCSV: String!
}

type Mutation {
  signUpStudent(signUpStudentInput: SignUpStudentInput!): AuthResponse!
  signUpTeacher(signUpTeacherInput: SignUpTeacherInput!): AuthResponse!
  signIn(signInInput: SignInInput!): AuthResponse!

  """Mediante este mutation el estudiante se puede unir a un classroom"""
  updateStudent(updateStudentInput: UpdateStudentInput!): Student!
  studentDoExercise(studentDoExerciseInput: StudentDoExerciseInput!): StudentDoExercise!
  createClassroom(createClassroomInput: CreateClassroomInput!): Classroom!

  """Ejecuta la poblaci√≥n de la base de datos"""
  executeSeed: Boolean!
}

input SignUpStudentInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
}

input SignUpTeacherInput {
  email: String!
  password: String!
  firstName: String!
  lastName: String!
  cellphone: Int!
}

input SignInInput {
  email: String!
  password: String!
}

input UpdateStudentInput {
  email: String
  password: String
  firstName: String
  lastName: String
  level: Int
  xp: Int
  classroomId: Int
}

input StudentDoExerciseInput {
  started_at: DateTime
  finished_at: DateTime
  errors: Int!
  exercise_id: Int!
}

input CreateClassroomInput {
  name: String!
  description: String
  courseId: Int!
}